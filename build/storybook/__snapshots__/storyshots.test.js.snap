// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots BundleAssets default 1`] = `
`;

exports[`Storyshots BundleAssets no baseline 1`] = `
`;

exports[`Storyshots BundleAssets not predictive 1`] = `
`;

exports[`Storyshots BundleAssetsTotalsTable default 1`] = `
<div
  style={
    Object {
      "padding": "80px 24px 24px",
    }
  }
>
  <table
    className="root"
  >
    <thead>
      <tr>
        <th
          className="cell metricName"
          style={
            Object {
              "textAlign": undefined,
              "width": undefined,
            }
          }
        >
           
        </th>
        <th
          className="cell value current"
          style={
            Object {
              "textAlign": undefined,
              "width": undefined,
            }
          }
        >
           
        </th>
        <th
          className="cell value baseline"
          style={
            Object {
              "textAlign": undefined,
              "width": undefined,
            }
          }
        >
          <span
            className="root"
          >
            Job #759
            <div
              className="tooltip"
            >
              Baseline
            </div>
          </span>
        </th>
      </tr>
    </thead>
    <tbody>
      <tr
        className=""
      >
        <td
          className="cell metricName"
          style={
            Object {
              "textAlign": undefined,
            }
          }
        >
          Total Size
        </td>
        <td
          className="cell value current"
          style={
            Object {
              "textAlign": undefined,
            }
          }
        >
          <code
            className="root"
          >
            2.47MB
            <span
              className="delta"
            >
              <span
                className="root"
              >
                <code
                  className="value negative"
                >
                  +0.36%
                </code>
              </span>
            </span>
          </code>
        </td>
        <td
          className="cell value baseline"
          style={
            Object {
              "textAlign": undefined,
            }
          }
        >
          <code
            className="root"
          >
            2.46MB
            <span
              className="delta"
            />
          </code>
        </td>
      </tr>
      <tr
        className=""
      >
        <td
          className="cell metricName"
          style={
            Object {
              "textAlign": undefined,
            }
          }
        >
          CSS
        </td>
        <td
          className="cell value current"
          style={
            Object {
              "textAlign": undefined,
            }
          }
        >
          <code
            className="root"
          >
            152.65KB
            <span
              className="delta"
            >
              <span
                className="root"
              >
                <code
                  className="value negative"
                >
                  +0.96%
                </code>
              </span>
            </span>
          </code>
        </td>
        <td
          className="cell value baseline"
          style={
            Object {
              "textAlign": undefined,
            }
          }
        >
          <code
            className="root"
          >
            151.2KB
            <span
              className="delta"
            />
          </code>
        </td>
      </tr>
      <tr
        className="unchanged"
      >
        <td
          className="cell metricName"
          style={
            Object {
              "textAlign": undefined,
            }
          }
        >
          Fonts
        </td>
        <td
          className="cell value current"
          style={
            Object {
              "textAlign": undefined,
            }
          }
        >
          -
        </td>
        <td
          className="cell value baseline"
          style={
            Object {
              "textAlign": undefined,
            }
          }
        >
          -
        </td>
      </tr>
      <tr
        className="unchanged"
      >
        <td
          className="cell metricName"
          style={
            Object {
              "textAlign": undefined,
            }
          }
        >
          HTML
        </td>
        <td
          className="cell value current"
          style={
            Object {
              "textAlign": undefined,
            }
          }
        >
          <code
            className="root"
          >
            40B
            <span
              className="delta"
            />
          </code>
        </td>
        <td
          className="cell value baseline"
          style={
            Object {
              "textAlign": undefined,
            }
          }
        >
          <code
            className="root"
          >
            40B
            <span
              className="delta"
            />
          </code>
        </td>
      </tr>
      <tr
        className="unchanged"
      >
        <td
          className="cell metricName"
          style={
            Object {
              "textAlign": undefined,
            }
          }
        >
          IMG
        </td>
        <td
          className="cell value current"
          style={
            Object {
              "textAlign": undefined,
            }
          }
        >
          <code
            className="root"
          >
            278.12KB
            <span
              className="delta"
            />
          </code>
        </td>
        <td
          className="cell value baseline"
          style={
            Object {
              "textAlign": undefined,
            }
          }
        >
          <code
            className="root"
          >
            278.12KB
            <span
              className="delta"
            />
          </code>
        </td>
      </tr>
      <tr
        className=""
      >
        <td
          className="cell metricName"
          style={
            Object {
              "textAlign": undefined,
            }
          }
        >
          JS
        </td>
        <td
          className="cell value current"
          style={
            Object {
              "textAlign": undefined,
            }
          }
        >
          <code
            className="root"
          >
            2.05MB
            <span
              className="delta"
            >
              <span
                className="root"
              >
                <code
                  className="value negative"
                >
                  +0.36%
                </code>
              </span>
            </span>
          </code>
        </td>
        <td
          className="cell value baseline"
          style={
            Object {
              "textAlign": undefined,
            }
          }
        >
          <code
            className="root"
          >
            2.04MB
            <span
              className="delta"
            />
          </code>
        </td>
      </tr>
      <tr
        className="unchanged"
      >
        <td
          className="cell metricName"
          style={
            Object {
              "textAlign": undefined,
            }
          }
        >
          Media
        </td>
        <td
          className="cell value current"
          style={
            Object {
              "textAlign": undefined,
            }
          }
        >
          -
        </td>
        <td
          className="cell value baseline"
          style={
            Object {
              "textAlign": undefined,
            }
          }
        >
          -
        </td>
      </tr>
      <tr
        className="unchanged"
      >
        <td
          className="cell metricName"
          style={
            Object {
              "textAlign": undefined,
            }
          }
        >
          Other
        </td>
        <td
          className="cell value current"
          style={
            Object {
              "textAlign": undefined,
            }
          }
        >
          <code
            className="root"
          >
            788B
            <span
              className="delta"
            />
          </code>
        </td>
        <td
          className="cell value baseline"
          style={
            Object {
              "textAlign": undefined,
            }
          }
        >
          <code
            className="root"
          >
            788B
            <span
              className="delta"
            />
          </code>
        </td>
      </tr>
    </tbody>
  </table>
</div>
`;

exports[`Storyshots Delta biggerIsBetter - false 1`] = `
<span
  className="root"
>
  <code
    className="value negative"
  >
    20kb
  </code>
</span>
`;

exports[`Storyshots Delta default 1`] = `
<span
  className="root"
>
  <code
    className="value positive"
  >
    20kb
  </code>
</span>
`;

exports[`Storyshots Delta empty 1`] = `
<span
  className="root"
>
  <code
    className="value"
  >
    0kb
  </code>
</span>
`;

exports[`Storyshots IconText default 1`] = `
<span
  className="root"
>
  <svg
    className="icon"
    fill="currentColor"
    viewBox="0 0 640 1024"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M512 192c-70.625 0-128 57.344-128 128 0 47.219 25.875 88.062 64 110.281V448s0 128-128 128c-53.062 0-94.656 11.375-128 28.812V302.281c38.156-22.219 64-63.062 64-110.281 0-70.656-57.344-128-128-128S0 121.344 0 192c0 47.219 25.844 88.062 64 110.281V721.75C25.844 743.938 0 784.75 0 832c0 70.625 57.344 128 128 128s128-57.375 128-128c0-33.5-13.188-63.75-34.25-86.625C240.375 722.5 270.656 704 320 704c254 0 256-256 256-256v-17.719c38.125-22.219 64-63.062 64-110.281 0-70.656-57.375-128-128-128zm-384-64c35.406 0 64 28.594 64 64s-28.594 64-64 64-64-28.594-64-64 28.594-64 64-64zm0 768c-35.406 0-64-28.625-64-64 0-35.312 28.594-64 64-64s64 28.688 64 64c0 35.375-28.594 64-64 64zm384-512c-35.375 0-64-28.594-64-64s28.625-64 64-64 64 28.594 64 64-28.625 64-64 64z"
    />
  </svg>
  <span
    className="text"
  >
    #010211
  </span>
</span>
`;

exports[`Storyshots JobName custom component 1`] = `
<div
  style={
    Object {
      "padding": "100px",
    }
  }
>
  <strong
    className="root"
  >
    Job #10
    <div
      className="tooltip"
    >
      View job details
    </div>
  </strong>
</div>
`;

exports[`Storyshots JobName default 1`] = `
<div
  style={
    Object {
      "padding": "100px",
    }
  }
>
  <span
    className="root"
  >
    Job #10
    <div
      className="tooltip"
    >
      View job details
    </div>
  </span>
</div>
`;

exports[`Storyshots JobName render 1`] = `
<div
  style={
    Object {
      "padding": "100px",
    }
  }
>
  <span
    className="root"
  >
    #10
    <div
      className="tooltip"
    >
      View job details
    </div>
  </span>
</div>
`;

exports[`Storyshots Metric default 1`] = `
<code
  className="root"
>
  100
  <span
    className="delta"
  >
    delta
  </span>
</code>
`;

exports[`Storyshots MetricsTable default 1`] = `
<table
  className="root"
>
  <thead>
    <tr>
      <th
        className="cell metricName"
        style={
          Object {
            "textAlign": undefined,
            "width": undefined,
          }
        }
      >
         
      </th>
      <th
        className="cell value current"
        style={
          Object {
            "textAlign": undefined,
            "width": undefined,
          }
        }
      >
        Run #1
      </th>
      <th
        className="cell value baseline"
        style={
          Object {
            "textAlign": undefined,
            "width": undefined,
          }
        }
      >
        Run #2
      </th>
    </tr>
  </thead>
  <tbody>
    <tr
      className=""
    >
      <td
        className="cell metricName"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        webpack.totalSize
      </td>
      <td
        className="cell value current"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        <code
          className="root"
        >
          873421
          <span
            className="delta"
          />
        </code>
      </td>
      <td
        className="cell value baseline"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        <code
          className="root"
        >
          122331
          <span
            className="delta"
          >
            <span
              className="root"
            >
              <code
                className="value positive"
              >
                -85.99%
              </code>
            </span>
          </span>
        </code>
      </td>
    </tr>
    <tr
      className=""
    >
      <td
        className="cell metricName"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        lighthouse.time-to-first-byte
      </td>
      <td
        className="cell value current"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        <code
          className="root"
        >
          1231
          <span
            className="delta"
          />
        </code>
      </td>
      <td
        className="cell value baseline"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        <code
          className="root"
        >
          980
          <span
            className="delta"
          >
            <span
              className="root"
            >
              <code
                className="value positive"
              >
                -20.39%
              </code>
            </span>
          </span>
        </code>
      </td>
    </tr>
    <tr
      className=""
    >
      <td
        className="cell metricName"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        Score
      </td>
      <td
        className="cell value current"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        <code
          className="root"
        >
          80
          <span
            className="delta"
          />
        </code>
      </td>
      <td
        className="cell value baseline"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        <code
          className="root"
        >
          70
          <span
            className="delta"
          >
            <span
              className="root"
            >
              <code
                className="value negative"
              >
                -12.5%
              </code>
            </span>
          </span>
        </code>
      </td>
    </tr>
    <tr
      className=""
    >
      <td
        className="cell metricName"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        webpack.totalSizeByType_js
      </td>
      <td
        className="cell value current"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        <code
          className="root"
        >
          344232
          <span
            className="delta"
          />
        </code>
      </td>
      <td
        className="cell value baseline"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        -
      </td>
    </tr>
    <tr
      className="unchanged"
    >
      <td
        className="cell metricName"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        lighthouse.performance-score
      </td>
      <td
        className="cell value current"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        <code
          className="root"
        >
          80
          <span
            className="delta"
          />
        </code>
      </td>
      <td
        className="cell value baseline"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        <code
          className="root"
        >
          80
          <span
            className="delta"
          />
        </code>
      </td>
    </tr>
  </tbody>
</table>
`;

exports[`Storyshots Table default 1`] = `
<table
  className="root"
>
  <thead>
    <tr />
  </thead>
  <tbody>
    <tr
      className=""
    >
      <td
        className="cell"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        a1
      </td>
      <td
        className="cell"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        b1
      </td>
      <td
        className="cell"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        c1
      </td>
    </tr>
    <tr
      className=""
    >
      <td
        className="cell"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        a2
      </td>
      <td
        className="cell"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        b2
      </td>
      <td
        className="cell"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        c2
      </td>
    </tr>
    <tr
      className=""
    >
      <td
        className="cell"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        a3
      </td>
      <td
        className="cell"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        b3
      </td>
      <td
        className="cell"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        c3
      </td>
    </tr>
  </tbody>
</table>
`;

exports[`Storyshots Table with custom alignment 1`] = `
<table
  className="root"
>
  <thead>
    <tr>
      <th
        className="cell"
        style={
          Object {
            "textAlign": undefined,
            "width": undefined,
          }
        }
      >
        
      </th>
      <th
        className="cell"
        style={
          Object {
            "textAlign": "right",
            "width": undefined,
          }
        }
      >
        Col A (right)
      </th>
      <th
        className="cell"
        style={
          Object {
            "textAlign": "center",
            "width": undefined,
          }
        }
      >
        Col B (center)
      </th>
      <th
        className="cell"
        style={
          Object {
            "textAlign": undefined,
            "width": undefined,
          }
        }
      >
        Col C
      </th>
    </tr>
  </thead>
  <tbody>
    <tr
      className=""
    >
      <th
        className="cell"
        style={
          Object {
            "textAlign": undefined,
            "width": undefined,
          }
        }
      >
        row 1
      </th>
      <td
        className="cell"
        style={
          Object {
            "textAlign": "right",
          }
        }
      >
        a1
      </td>
      <td
        className="cell"
        style={
          Object {
            "textAlign": "center",
          }
        }
      >
        b1
      </td>
      <td
        className="cell"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        c1
      </td>
    </tr>
    <tr
      className=""
    >
      <th
        className="cell"
        style={
          Object {
            "textAlign": undefined,
            "width": undefined,
          }
        }
      >
        row 2
      </th>
      <td
        className="cell"
        style={
          Object {
            "textAlign": "right",
          }
        }
      >
        a2
      </td>
      <td
        className="cell"
        style={
          Object {
            "textAlign": "center",
          }
        }
      >
        b2
      </td>
      <td
        className="cell"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        c2
      </td>
    </tr>
    <tr
      className=""
    >
      <th
        className="cell"
        style={
          Object {
            "textAlign": undefined,
            "width": undefined,
          }
        }
      >
        row 3
      </th>
      <td
        className="cell"
        style={
          Object {
            "textAlign": "right",
          }
        }
      >
        a3
      </td>
      <td
        className="cell"
        style={
          Object {
            "textAlign": "center",
          }
        }
      >
        b3
      </td>
      <td
        className="cell"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        c3
      </td>
    </tr>
  </tbody>
</table>
`;

exports[`Storyshots Table with headers 1`] = `
<table
  className="root"
>
  <thead>
    <tr>
      <th
        className="cell"
        style={
          Object {
            "textAlign": undefined,
            "width": undefined,
          }
        }
      >
        Col A
      </th>
      <th
        className="cell"
        style={
          Object {
            "textAlign": undefined,
            "width": undefined,
          }
        }
      >
        Col B
      </th>
      <th
        className="cell"
        style={
          Object {
            "textAlign": undefined,
            "width": undefined,
          }
        }
      >
        Col C
      </th>
    </tr>
  </thead>
  <tbody>
    <tr
      className=""
    >
      <td
        className="cell"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        a1
      </td>
      <td
        className="cell"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        b1
      </td>
      <td
        className="cell"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        c1
      </td>
    </tr>
    <tr
      className=""
    >
      <td
        className="cell"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        a2
      </td>
      <td
        className="cell"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        b2
      </td>
      <td
        className="cell"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        c2
      </td>
    </tr>
    <tr
      className=""
    >
      <td
        className="cell"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        a3
      </td>
      <td
        className="cell"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        b3
      </td>
      <td
        className="cell"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        c3
      </td>
    </tr>
  </tbody>
</table>
`;

exports[`Storyshots Table with row headers 1`] = `
<table
  className="root"
>
  <thead>
    <tr />
  </thead>
  <tbody>
    <tr
      className=""
    >
      <th
        className="cell"
        style={
          Object {
            "textAlign": undefined,
            "width": undefined,
          }
        }
      >
        row 1
      </th>
      <td
        className="cell"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        a1
      </td>
      <td
        className="cell"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        b1
      </td>
      <td
        className="cell"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        c1
      </td>
    </tr>
    <tr
      className=""
    >
      <th
        className="cell"
        style={
          Object {
            "textAlign": undefined,
            "width": undefined,
          }
        }
      >
        row 2
      </th>
      <td
        className="cell"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        a2
      </td>
      <td
        className="cell"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        b2
      </td>
      <td
        className="cell"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        c2
      </td>
    </tr>
    <tr
      className=""
    >
      <th
        className="cell"
        style={
          Object {
            "textAlign": undefined,
            "width": undefined,
          }
        }
      >
        row 3
      </th>
      <td
        className="cell"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        a3
      </td>
      <td
        className="cell"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        b3
      </td>
      <td
        className="cell"
        style={
          Object {
            "textAlign": undefined,
          }
        }
      >
        c3
      </td>
    </tr>
  </tbody>
</table>
`;

exports[`Storyshots TableFilters default 1`] = `
<div
  style={
    Object {
      "display": "flex",
      "justifyContent": "center",
      "margin": "0 auto",
      "maxWidth": "480px",
      "width": "100%",
    }
  }
>
  <div
    className="root"
  >
    <span
      className="root label"
    >
      <svg
        className="icon"
        fill="currentColor"
        viewBox="0 0 24 24"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"
        />
        <path
          d="M0 0h24v24H0z"
          fill="none"
        />
      </svg>
      <span
        className="text"
      >
        Filters
      </span>
    </span>
    <form
      className="dropdown"
    >
      <div
        className="group"
      >
        <div
          className="groupHeader"
        />
        <div
          className="filter"
        >
          <input
            checked={true}
            className="filterInput"
            id="filter-changed"
            name="changed"
            onChange={[Function]}
            type="checkbox"
          />
          <label
            className="filterLabel"
            htmlFor="filter-changed"
          >
            Changed
          </label>
        </div>
        <div
          className="filter"
        >
          <input
            checked={false}
            className="filterInput"
            id="filter-entrypoint"
            name="entrypoint"
            onChange={[Function]}
            type="checkbox"
          />
          <label
            className="filterLabel"
            htmlFor="filter-entrypoint"
          >
            Entrypoint
          </label>
        </div>
        <div
          className="group"
        >
          <div
            className="groupHeader"
          >
            <h3
              className="groupTitle"
            >
              File types
            </h3>
          </div>
          <div
            className="filter"
          >
            <input
              checked={true}
              className="filterInput"
              id="filter-fileTypes.CSS"
              name="fileTypes.CSS"
              onChange={[Function]}
              type="checkbox"
            />
            <label
              className="filterLabel"
              htmlFor="filter-fileTypes.CSS"
            >
              CSS
            </label>
          </div>
          <div
            className="filter"
          >
            <input
              checked={true}
              className="filterInput"
              id="filter-fileTypes.JS"
              name="fileTypes.JS"
              onChange={[Function]}
              type="checkbox"
            />
            <label
              className="filterLabel"
              htmlFor="filter-fileTypes.JS"
            >
              JSS
            </label>
          </div>
        </div>
      </div>
    </form>
  </div>
</div>
`;

exports[`Storyshots Tooltip default 1`] = `
<div
  style={
    Object {
      "padding": "100px 100px",
    }
  }
>
  <span
    className="root"
  >
    Job #100
    <div
      className="tooltip"
    >
      View job #100
    </div>
  </span>
</div>
`;
