// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots UI/Dropdown default 1`] = `
<MemoryRouter
  initialEntries={
    Array [
      Object {
        "key": "home",
        "pathname": "/",
      },
    ]
  }
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "key": "home",
            "pathname": "/",
            "search": "",
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "key": "home",
          "pathname": "/",
          "search": "",
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <div
      style={
        Object {
          "height": "100%",
          "padding": "24px",
          "width": "100%",
        }
      }
    >
      <DropdownContainer
        glyph="filter"
        label="Toggle"
      >
        <OutsideClickHandler
          disabled={false}
          display="block"
          onOutsideClick={[Function]}
          useCapture={true}
        >
          <div>
            <Dropdown
              activeLabel={false}
              align="left"
              className=""
              dropdownToggle={[Function]}
              glyph="filter"
              label="Toggle"
              open={false}
            >
              <div
                className="root left"
              >
                <FlexStack
                  as="button"
                  className="label"
                  onClick={[Function]}
                  space="xxxsmall"
                  type="button"
                >
                  <button
                    className="label root space--xxxsmall"
                    onClick={[Function]}
                    type="button"
                  >
                    <Icon
                      as="span"
                      className="item labelIcon"
                      glyph="filter"
                      key=".0"
                    >
                      <span
                        className="root item labelIcon"
                      >
                        <FilterIcon
                          className="icon"
                          fill="currentColor"
                          viewBox="0 0 24 24"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <svg
                            className="icon"
                            fill="currentColor"
                            viewBox="0 0 24 24"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"
                            />
                            <path
                              d="M0 0h24v24H0z"
                              fill="none"
                            />
                          </svg>
                        </FilterIcon>
                      </span>
                    </Icon>
                    <div
                      className="item"
                      key=".1"
                    >
                      Toggle
                    </div>
                  </button>
                </FlexStack>
                <div
                  className="dropdown"
                >
                  <ul>
                    <li>
                      Option 1
                    </li>
                    <li>
                      Option 2
                    </li>
                  </ul>
                </div>
              </div>
            </Dropdown>
          </div>
        </OutsideClickHandler>
      </DropdownContainer>
    </div>
  </Router>
</MemoryRouter>
`;

exports[`Storyshots UI/Dropdown with render function 1`] = `
<MemoryRouter
  initialEntries={
    Array [
      Object {
        "key": "home",
        "pathname": "/",
      },
    ]
  }
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "key": "home",
            "pathname": "/",
            "search": "",
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "key": "home",
          "pathname": "/",
          "search": "",
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <div
      style={
        Object {
          "height": "100%",
          "padding": "24px",
          "width": "100%",
        }
      }
    >
      <DropdownContainer
        glyph="filter"
        label="Toggle"
      >
        <OutsideClickHandler
          disabled={false}
          display="block"
          onOutsideClick={[Function]}
          useCapture={true}
        >
          <div>
            <Dropdown
              activeLabel={false}
              align="left"
              className=""
              dropdownToggle={[Function]}
              glyph="filter"
              label="Toggle"
              open={false}
            >
              <div
                className="root left"
              >
                <FlexStack
                  as="button"
                  className="label"
                  onClick={[Function]}
                  space="xxxsmall"
                  type="button"
                >
                  <button
                    className="label root space--xxxsmall"
                    onClick={[Function]}
                    type="button"
                  >
                    <Icon
                      as="span"
                      className="item labelIcon"
                      glyph="filter"
                      key=".0"
                    >
                      <span
                        className="root item labelIcon"
                      >
                        <FilterIcon
                          className="icon"
                          fill="currentColor"
                          viewBox="0 0 24 24"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <svg
                            className="icon"
                            fill="currentColor"
                            viewBox="0 0 24 24"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"
                            />
                            <path
                              d="M0 0h24v24H0z"
                              fill="none"
                            />
                          </svg>
                        </FilterIcon>
                      </span>
                    </Icon>
                    <div
                      className="item"
                      key=".1"
                    >
                      Toggle
                    </div>
                  </button>
                </FlexStack>
                <div
                  className="dropdown"
                >
                  <button
                    onClick={[Function]}
                    type="button"
                  >
                    Toggle dropdown
                  </button>
                </div>
              </div>
            </Dropdown>
          </div>
        </OutsideClickHandler>
      </DropdownContainer>
    </div>
  </Router>
</MemoryRouter>
`;

exports[`Storyshots UI/Dropdown with right alignement 1`] = `
<MemoryRouter
  initialEntries={
    Array [
      Object {
        "key": "home",
        "pathname": "/",
      },
    ]
  }
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "key": "home",
            "pathname": "/",
            "search": "",
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "key": "home",
          "pathname": "/",
          "search": "",
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <div
      style={
        Object {
          "height": "100%",
          "padding": "24px",
          "width": "100%",
        }
      }
    >
      <DropdownContainer
        align="right"
        glyph="filter"
        label="Toggle"
      >
        <OutsideClickHandler
          disabled={false}
          display="block"
          onOutsideClick={[Function]}
          useCapture={true}
        >
          <div>
            <Dropdown
              activeLabel={false}
              align="right"
              className=""
              dropdownToggle={[Function]}
              glyph="filter"
              label="Toggle"
              open={false}
            >
              <div
                className="root right"
              >
                <FlexStack
                  as="button"
                  className="label"
                  onClick={[Function]}
                  space="xxxsmall"
                  type="button"
                >
                  <button
                    className="label root space--xxxsmall"
                    onClick={[Function]}
                    type="button"
                  >
                    <Icon
                      as="span"
                      className="item labelIcon"
                      glyph="filter"
                      key=".0"
                    >
                      <span
                        className="root item labelIcon"
                      >
                        <FilterIcon
                          className="icon"
                          fill="currentColor"
                          viewBox="0 0 24 24"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <svg
                            className="icon"
                            fill="currentColor"
                            viewBox="0 0 24 24"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"
                            />
                            <path
                              d="M0 0h24v24H0z"
                              fill="none"
                            />
                          </svg>
                        </FilterIcon>
                      </span>
                    </Icon>
                    <div
                      className="item"
                      key=".1"
                    >
                      Toggle
                    </div>
                  </button>
                </FlexStack>
                <div
                  className="dropdown"
                >
                  <ul>
                    <li>
                      Option 1
                    </li>
                    <li>
                      Option 2
                    </li>
                  </ul>
                </div>
              </div>
            </Dropdown>
          </div>
        </OutsideClickHandler>
      </DropdownContainer>
    </div>
  </Router>
</MemoryRouter>
`;
